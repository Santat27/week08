name: CD - Deploy Frontend to AKS
on:
  workflow_dispatch:
    inputs:
      product_api_ip:
        description: 'External IP of Product Service (e.g., http://X.X.X.X:8000)'
        required: true
        default: 'http://<ip_address>:8000'
      order_api_ip:
        description: 'External IP of Order Service (e.g., http://Y.Y.Y.Y:8001)'
        required: true
        default: 'http://<ip_address>:8001'
      aks_cluster_name:
        description: 'Name of the AKS Cluster to deploy to'
        required: true
        default: 'week08aks'
      aks_resource_group:
        description: 'Resource Group of the AKS Cluster'
        required: true
        default: 'week08rg'
      acr_name:
        description: 'Azure Container Registry NAME (no .azurecr.io)'
        required: true
        default: 'week08acr'

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production
    env:
      PRODUCT_API: ${{ github.event.inputs.product_api_ip }}
      ORDER_API:   ${{ github.event.inputs.order_api_ip }}
      ACR_NAME:    ${{ github.event.inputs.acr_name }}   # maps input to env
      IMAGE_TAG:   latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Validate/resolve ACR and compute LOGIN_SERVER
      - name: Resolve ACR name and login server
        run: |
          set -e
          echo "ACR_NAME(initial)='${ACR_NAME}'"
          if [ -z "${ACR_NAME}" ]; then
            echo "No acr_name provided; trying to auto-detect an ACR in the resource group..."
            RG="${{ github.event.inputs.aks_resource_group }}"
            ACR_NAME=$(az acr list -g "$RG" --query "[0].name" -o tsv)
          fi
          if [ -z "${ACR_NAME}" ]; then
            echo "ERROR: Could not determine ACR name. Re-run and set 'acr_name' (e.g., week08xyzacr â€” no .azurecr.io)."
            exit 1
          fi
          echo "Using ACR_NAME='${ACR_NAME}'"
          echo "ACR_NAME=${ACR_NAME}" >> $GITHUB_ENV
          echo "LOGIN_SERVER=$(az acr show -n "$ACR_NAME" --query loginServer -o tsv)" >> $GITHUB_ENV

      - name: Show resolved ACR
        run: |
          echo "ACR_NAME=$ACR_NAME"
          echo "LOGIN_SERVER=$LOGIN_SERVER"

      - name: Login to Azure Container Registry
        run: az acr login --name "$ACR_NAME"

      - name: Inject Backend IPs into Frontend m
